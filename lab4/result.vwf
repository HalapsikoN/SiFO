/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("aload")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("IR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("adress")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("adress[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adress";
}

SIGNAL("adress[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adress";
}

SIGNAL("adress[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adress";
}

SIGNAL("adress[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adress";
}

SIGNAL("adress[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adress";
}

SIGNAL("adress[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adress";
}

SIGNAL("adress[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adress";
}

SIGNAL("adress[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "adress";
}

SIGNAL("DATA_OUTPUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA_OUTPUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("data55")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data55[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "data55";
}

SIGNAL("data55[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "data55";
}

SIGNAL("data55[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "data55";
}

SIGNAL("data55[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "data55";
}

SIGNAL("data55[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "data55";
}

SIGNAL("data55[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "data55";
}

SIGNAL("data55[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "data55";
}

SIGNAL("data55[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "data55";
}

SIGNAL("bx_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bx_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bx_out";
}

SIGNAL("bx_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bx_out";
}

SIGNAL("bx_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bx_out";
}

SIGNAL("bx_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bx_out";
}

SIGNAL("bx_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bx_out";
}

SIGNAL("bx_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bx_out";
}

SIGNAL("FROM_IR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("FROM_IR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR";
}

SIGNAL("FROM_IR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR";
}

SIGNAL("FROM_IR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR";
}

SIGNAL("FROM_IR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR";
}

SIGNAL("FROM_IR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR";
}

SIGNAL("FROM_IR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR";
}

SIGNAL("FROM_IR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR";
}

SIGNAL("FROM_IR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR";
}

SIGNAL("DAR_in22")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DAR_in22[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DAR_in22";
}

SIGNAL("DAR_in22[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DAR_in22";
}

SIGNAL("DAR_in22[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DAR_in22";
}

SIGNAL("DAR_in22[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DAR_in22";
}

SIGNAL("DAR_in22[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DAR_in22";
}

SIGNAL("DAR_in22[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DAR_in22";
}

SIGNAL("DR22")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DR22[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR22";
}

SIGNAL("DR22[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR22";
}

SIGNAL("DR22[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR22";
}

SIGNAL("DR22[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR22";
}

SIGNAL("DR22[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR22";
}

SIGNAL("DR22[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DR22";
}

SIGNAL("DAR-clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("FROM_IR18")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("FROM_IR18[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR18";
}

SIGNAL("FROM_IR18[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR18";
}

SIGNAL("FROM_IR18[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR18";
}

SIGNAL("FROM_IR18[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR18";
}

SIGNAL("FROM_IR18[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR18";
}

SIGNAL("FROM_IR18[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR18";
}

SIGNAL("FROM_IR18[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR18";
}

SIGNAL("FROM_IR18[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FROM_IR18";
}

SIGNAL("ips")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ips[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ips";
}

SIGNAL("ips[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ips";
}

SIGNAL("ips[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ips";
}

SIGNAL("ips[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ips";
}

SIGNAL("ips[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ips";
}

SIGNAL("ips[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ips";
}

SIGNAL("ips[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ips";
}

SIGNAL("ips[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ips";
}

SIGNAL("000")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("11")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("res")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("aload")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("data3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 640.0;
	}
}

TRANSITION_LIST("IR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 620.0;
	}
}

TRANSITION_LIST("IR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 620.0;
	}
}

TRANSITION_LIST("IR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 620.0;
	}
}

TRANSITION_LIST("IR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 620.0;
	}
}

TRANSITION_LIST("IR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("adress[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("adress[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("adress[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("adress[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("adress[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("adress[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("adress[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("adress[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 80.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
		}
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL Z FOR 60.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 50.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 60.0;
		}
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("data55[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("data55[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("data55[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("data55[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("data55[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("data55[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("data55[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("data55[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bx_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bx_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bx_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bx_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 990.0;
	}
}

TRANSITION_LIST("bx_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bx_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 990.0;
	}
}

TRANSITION_LIST("FROM_IR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("DAR_in22[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 140.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 110.0;
	}
}

TRANSITION_LIST("DAR_in22[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 140.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 110.0;
	}
}

TRANSITION_LIST("DAR_in22[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 140.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 110.0;
	}
}

TRANSITION_LIST("DAR_in22[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 140.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 110.0;
	}
}

TRANSITION_LIST("DAR_in22[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 140.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 110.0;
	}
}

TRANSITION_LIST("DAR_in22[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 140.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 140.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 110.0;
	}
}

TRANSITION_LIST("DR22[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DR22[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DR22[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DR22[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 920.0;
	}
}

TRANSITION_LIST("DR22[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DR22[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 600.0;
	}
}

TRANSITION_LIST("DAR-clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 140.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("FROM_IR18[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR18[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR18[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR18[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR18[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR18[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR18[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("FROM_IR18[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 100.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("ips[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ips[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ips[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ips[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ips[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 410.0;
	}
}

TRANSITION_LIST("ips[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 90.0;
	}
}

TRANSITION_LIST("ips[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 90.0;
	}
}

TRANSITION_LIST("ips[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("000")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 150.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 150.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 150.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 150.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
	}
}

TRANSITION_LIST("11")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 150.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("res")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 150.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "data55";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "data55[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data55[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data55[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data55[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data55[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data55[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data55[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data55[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "aload";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24;
}

DISPLAY_LINE
{
	CHANNEL = "IR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "IR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "IR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "IR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "IR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "IR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "IR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "IR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "IR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "IR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "IR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "IR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "adress";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
	CHILDREN = 26, 27, 28, 29, 30, 31, 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "adress[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "adress[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "adress[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "adress[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "adress[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "adress[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "adress[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "adress[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
	CHILDREN = 35, 36, 37, 38, 39, 40;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "bx_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
	CHILDREN = 42, 43, 44, 45, 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "bx_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "bx_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "bx_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "bx_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "bx_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "bx_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
	CHILDREN = 49, 50, 51, 52, 53, 54, 55, 56;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "DAR_in22";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
	CHILDREN = 58, 59, 60, 61, 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "DAR_in22[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "DAR_in22[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "DAR_in22[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "DAR_in22[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "DAR_in22[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "DAR_in22[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "DR22";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
	CHILDREN = 65, 66, 67, 68, 69, 70;
}

DISPLAY_LINE
{
	CHANNEL = "DR22[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "DR22[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "DR22[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "DR22[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "DR22[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "DR22[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "DAR-clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR18";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
	CHILDREN = 73, 74, 75, 76, 77, 78, 79, 80;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR18[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR18[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR18[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR18[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR18[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR18[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR18[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "FROM_IR18[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "ips";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 0;
	CHILDREN = 82, 83, 84, 85, 86, 87, 88, 89;
}

DISPLAY_LINE
{
	CHANNEL = "ips[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "ips[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "ips[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "ips[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "ips[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "ips[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "ips[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "ips[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "000";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "11";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "res";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 360000;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 360000;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 360000;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 360000;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 360000;
	MASTER = TRUE;
}
;
