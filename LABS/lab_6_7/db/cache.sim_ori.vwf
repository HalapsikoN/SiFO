/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 4000.0;
	SIMULATION_TIME = 4000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("ADDRESS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDRESS[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DATA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA_OUTPUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA_OUTPUT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("hit/miss")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("write")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DATA_OUT1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA_OUT1[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT1";
}

SIGNAL("DATA_OUT1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT1";
}

SIGNAL("DATA_OUT1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT1";
}

SIGNAL("DATA_OUT1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT1";
}

SIGNAL("DATA_OUT1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT1";
}

SIGNAL("DATA_OUT1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT1";
}

SIGNAL("DATA_OUT1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT1";
}

SIGNAL("DATA_OUT1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT1";
}

SIGNAL("DATA_OUT1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT1";
}

SIGNAL("DATA_OUT2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA_OUT2[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT2";
}

SIGNAL("DATA_OUT2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT2";
}

SIGNAL("DATA_OUT2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT2";
}

SIGNAL("DATA_OUT2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT2";
}

SIGNAL("DATA_OUT2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT2";
}

SIGNAL("DATA_OUT2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT2";
}

SIGNAL("DATA_OUT2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT2";
}

SIGNAL("DATA_OUT2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT2";
}

SIGNAL("DATA_OUT2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT2";
}

SIGNAL("DATA_OUT3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA_OUT3[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT3";
}

SIGNAL("DATA_OUT3[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT3";
}

SIGNAL("DATA_OUT3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT3";
}

SIGNAL("DATA_OUT3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT3";
}

SIGNAL("DATA_OUT3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT3";
}

SIGNAL("DATA_OUT3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT3";
}

SIGNAL("DATA_OUT3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT3";
}

SIGNAL("DATA_OUT3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT3";
}

SIGNAL("DATA_OUT3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT3";
}

SIGNAL("DATA_OUT4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA_OUT4[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT4";
}

SIGNAL("DATA_OUT4[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT4";
}

SIGNAL("DATA_OUT4[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT4";
}

SIGNAL("DATA_OUT4[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT4";
}

SIGNAL("DATA_OUT4[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT4";
}

SIGNAL("DATA_OUT4[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT4";
}

SIGNAL("DATA_OUT4[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT4";
}

SIGNAL("DATA_OUT4[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT4";
}

SIGNAL("DATA_OUT4[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT4";
}

SIGNAL("neDCa1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("read_start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("string")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("string[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "string";
}

SIGNAL("string[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "string";
}

SIGNAL("write1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("write2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("write3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("write4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDRESS_IN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ADDRESS_IN[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS_IN";
}

SIGNAL("ADDRESS_IN[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS_IN";
}

SIGNAL("ADDRESS_IN[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS_IN";
}

SIGNAL("ADDRESS_IN[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS_IN";
}

SIGNAL("ADDRESS_IN[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS_IN";
}

SIGNAL("ADDRESS_IN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS_IN";
}

SIGNAL("ADDRESS_IN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS_IN";
}

SIGNAL("ADDRESS_IN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ADDRESS_IN";
}

TRANSITION_LIST("ADDRESS[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 340.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 160.0;
			LEVEL 0 FOR 340.0;
		}
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 340.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("ADDRESS[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 340.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 1 FOR 340.0;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 340.0;
		LEVEL Z FOR 360.0;
		LEVEL 1 FOR 340.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("ADDRESS[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 340.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 0 FOR 340.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 340.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("ADDRESS[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 340.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 1 FOR 340.0;
		LEVEL Z FOR 160.0;
		LEVEL 1 FOR 340.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 340.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("ADDRESS[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("ADDRESS[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 80.0;
				LEVEL 1 FOR 80.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 160.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 360.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("ADDRESS[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 160.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 160.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 360.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("ADDRESS[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 8;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 160.0;
		}
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 160.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 360.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 200;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("DATA[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 340.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 0 FOR 340.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 340.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("DATA[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 330.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 160.0;
			LEVEL 0 FOR 340.0;
		}
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 340.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("DATA[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 340.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 330.0;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 340.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 330.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("DATA[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 340.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 340.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("DATA[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 310.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("DATA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("DATA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("DATA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 40.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("DATA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			NODE
			{
				REPEAT = 7;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
			}
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 160.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 160.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 360.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 1410.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 390.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 480.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 540.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 420.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 450.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 390.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 480.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 540.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 420.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 450.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 390.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 480.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 540.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 420.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 450.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 390.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 480.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 540.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 420.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 450.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 390.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 480.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 540.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 420.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 450.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 390.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 480.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 540.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 420.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 450.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 390.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 480.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 540.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 420.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 450.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 390.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 480.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL Z FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 540.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 420.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 450.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 390.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 480.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 540.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 420.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 480.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 450.0;
	}
}

TRANSITION_LIST("hit/miss")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2020.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 950.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 430.0;
	}
}

TRANSITION_LIST("read")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 445.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 250.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 500.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 445.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 500.0;
		}
	}
}

TRANSITION_LIST("write")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT1[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 3890.0;
	}
}

TRANSITION_LIST("DATA_OUT1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("DATA_OUT1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1800.0;
	}
}

TRANSITION_LIST("DATA_OUT1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 390.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1800.0;
	}
}

TRANSITION_LIST("DATA_OUT1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 890.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("DATA_OUT2[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2350.0;
		LEVEL 1 FOR 1650.0;
	}
}

TRANSITION_LIST("DATA_OUT2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 730.0;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("DATA_OUT2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1800.0;
	}
}

TRANSITION_LIST("DATA_OUT2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1800.0;
	}
}

TRANSITION_LIST("DATA_OUT2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 730.0;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("DATA_OUT3[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT3[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT3[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1170.0;
		LEVEL 1 FOR 2830.0;
	}
}

TRANSITION_LIST("DATA_OUT3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT3[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1170.0;
		LEVEL 1 FOR 2830.0;
	}
}

TRANSITION_LIST("DATA_OUT3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1170.0;
		LEVEL 1 FOR 830.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1800.0;
	}
}

TRANSITION_LIST("DATA_OUT3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1170.0;
		LEVEL 1 FOR 1030.0;
		LEVEL 0 FOR 1800.0;
	}
}

TRANSITION_LIST("DATA_OUT3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("DATA_OUT4[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT4[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT4[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT4[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT4[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1670.0;
		LEVEL 1 FOR 2330.0;
	}
}

TRANSITION_LIST("DATA_OUT4[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("DATA_OUT4[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1670.0;
		LEVEL 1 FOR 330.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1800.0;
	}
}

TRANSITION_LIST("DATA_OUT4[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1670.0;
		LEVEL 1 FOR 530.0;
		LEVEL 0 FOR 1800.0;
	}
}

TRANSITION_LIST("DATA_OUT4[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("neDCa1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 490.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 790.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 470.0;
	}
}

TRANSITION_LIST("read_start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 425.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 430.0;
		}
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 430.0;
		LEVEL 0 FOR 375.0;
		LEVEL 1 FOR 65.0;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 430.0;
	}
}

TRANSITION_LIST("string[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 1760.0;
	}
}

TRANSITION_LIST("string[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 480.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 1760.0;
	}
}

TRANSITION_LIST("write1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 3940.0;
	}
}

TRANSITION_LIST("write2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1690.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1740.0;
	}
}

TRANSITION_LIST("write3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1050.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 2940.0;
	}
}

TRANSITION_LIST("write4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1550.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 2440.0;
	}
}

TRANSITION_LIST("ADDRESS_IN[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 1500.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1800.0;
	}
}

TRANSITION_LIST("ADDRESS_IN[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 1800.0;
	}
}

TRANSITION_LIST("ADDRESS_IN[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("ADDRESS_IN[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("ADDRESS_IN[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("ADDRESS_IN[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
	}
}

TRANSITION_LIST("ADDRESS_IN[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 1500.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1800.0;
	}
}

TRANSITION_LIST("ADDRESS_IN[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1800.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS_IN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS_IN[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS_IN[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS_IN[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS_IN[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS_IN[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS_IN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS_IN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS_IN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "DATA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39, 40;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "hit/miss";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
	CHILDREN = 43, 44, 45, 46, 47, 48, 49, 50, 51;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT1[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
	CHILDREN = 53, 54, 55, 56, 57, 58, 59, 60, 61;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 0;
	CHILDREN = 63, 64, 65, 66, 67, 68, 69, 70, 71;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT3[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT3[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT3[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
	CHILDREN = 73, 74, 75, 76, 77, 78, 79, 80, 81;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT4[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT4[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT4[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT4[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT4[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT4[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT4[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT4[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT4[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "neDCa1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "read_start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "string";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 0;
	CHILDREN = 85, 86;
}

DISPLAY_LINE
{
	CHANNEL = "string[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "string[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "write1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 640000;
	MASTER = TRUE;
}
;
