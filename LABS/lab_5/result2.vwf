/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("lvl1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("lvl2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SLAVE_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SLAVE_1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_1";
}

SIGNAL("SLAVE_1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_1";
}

SIGNAL("SLAVE_1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_1";
}

SIGNAL("SLAVE_1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_1";
}

SIGNAL("SLAVE_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SLAVE_2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_2";
}

SIGNAL("SLAVE_2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_2";
}

SIGNAL("SLAVE_2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_2";
}

SIGNAL("SLAVE_2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_2";
}

SIGNAL("SLAVE_3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SLAVE_3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_3";
}

SIGNAL("SLAVE_3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_3";
}

SIGNAL("SLAVE_3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_3";
}

SIGNAL("SLAVE_3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_3";
}

SIGNAL("SLAVE_4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SLAVE_4[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_4";
}

SIGNAL("SLAVE_4[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_4";
}

SIGNAL("SLAVE_4[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_4";
}

SIGNAL("SLAVE_4[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_4";
}

SIGNAL("SLAVE_5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SLAVE_5[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_5";
}

SIGNAL("SLAVE_5[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_5";
}

SIGNAL("SLAVE_5[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_5";
}

SIGNAL("SLAVE_5[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVE_5";
}

SIGNAL("ADDRESS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDRESS[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("ADDRESS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDRESS";
}

SIGNAL("BUSY")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("DATA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA";
}

SIGNAL("MSYN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("req1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("req2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SSYN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("req1_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("req1_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("req1_3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("req2_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("req2_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("req2_3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("lvl1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 4360.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 3910.0;
	}
}

TRANSITION_LIST("lvl2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 760.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 3780.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 760.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 3510.0;
	}
}

TRANSITION_LIST("SLAVE_1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 4040.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 3470.0;
	}
}

TRANSITION_LIST("SLAVE_1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 4040.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 840.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 3470.0;
	}
}

TRANSITION_LIST("SLAVE_2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 4240.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 3870.0;
	}
}

TRANSITION_LIST("SLAVE_2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 4240.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 3870.0;
	}
}

TRANSITION_LIST("SLAVE_2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_4[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_4[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_4[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_4[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("SLAVE_5[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 530.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 4420.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 3650.0;
	}
}

TRANSITION_LIST("SLAVE_5[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 530.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 4420.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 3650.0;
	}
}

TRANSITION_LIST("SLAVE_5[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 530.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 4420.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 3650.0;
	}
}

TRANSITION_LIST("SLAVE_5[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 530.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 4420.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 3650.0;
	}
}

TRANSITION_LIST("ADDRESS[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 180.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 360.0;
		LEVEL Z FOR 3780.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 180.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 360.0;
		LEVEL Z FOR 3510.0;
	}
}

TRANSITION_LIST("ADDRESS[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 180.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 3780.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 180.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 3510.0;
	}
}

TRANSITION_LIST("ADDRESS[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 180.0;
		}
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 360.0;
		LEVEL Z FOR 3780.0;
		LEVEL 1 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 180.0;
		}
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 360.0;
		LEVEL Z FOR 3510.0;
	}
}

TRANSITION_LIST("ADDRESS[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 180.0;
		}
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 360.0;
		LEVEL Z FOR 3780.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 180.0;
		}
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 360.0;
		LEVEL Z FOR 3510.0;
	}
}

TRANSITION_LIST("BUSY")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 3780.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 3510.0;
	}
}

TRANSITION_LIST("DATA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 3780.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 3510.0;
	}
}

TRANSITION_LIST("DATA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 180.0;
		}
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 360.0;
		LEVEL Z FOR 3780.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 180.0;
		}
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 360.0;
		LEVEL Z FOR 3510.0;
	}
}

TRANSITION_LIST("DATA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 3780.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 3510.0;
	}
}

TRANSITION_LIST("DATA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 180.0;
		}
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 360.0;
		LEVEL Z FOR 3780.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 180.0;
		}
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 360.0;
		LEVEL Z FOR 3510.0;
	}
}

TRANSITION_LIST("MSYN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 3840.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 3510.0;
	}
}

TRANSITION_LIST("req1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 520.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 4240.0;
		LEVEL 1 FOR 520.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 3910.0;
	}
}

TRANSITION_LIST("req2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 3780.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 3510.0;
	}
}

TRANSITION_LIST("SSYN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 3920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 3510.0;
	}
}

TRANSITION_LIST("req1_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 790.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 4940.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 3910.0;
	}
}

TRANSITION_LIST("req1_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 4800.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 4470.0;
	}
}

TRANSITION_LIST("req1_3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 4640.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 4270.0;
	}
}

TRANSITION_LIST("req2_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 4940.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 4670.0;
	}
}

TRANSITION_LIST("req2_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1050.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 4800.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 3510.0;
	}
}

TRANSITION_LIST("req2_3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 810.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 4740.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 3690.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BUSY";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "req1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "req2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "lvl1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "lvl2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "DATA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "MSYN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SSYN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
	CHILDREN = 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_4[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_4[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_4[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_4[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_5[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_5[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_5[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVE_5[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "req1_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "req1_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "req1_3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "req2_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "req2_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "req2_3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 1200000;
	MASTER = TRUE;
}
;
